// <auto-generated />
using System;
using Infrastructure.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastracture.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Document", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InstantJSON")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PathFile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Documents");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00aec25c-5055-42f1-b49e-e312b468406b"),
                            CreatedDate = new DateTime(2024, 7, 23, 14, 4, 54, 144, DateTimeKind.Local).AddTicks(3114),
                            InstantJSON = "{\r\n                            \"documentId\": \"SGS5RehxYUyGZIpdckC0Nw==\",\r\n                            \"instantJSON\": {\r\n                                \"annotations\": [\r\n                                    {\r\n                                        \"bbox\": [\r\n                                            147.92001342773438,\r\n                                            206.239990234375,\r\n                                            306.55999755859375,\r\n                                            32\r\n                                        ],\r\n                                        \"borderStyle\": \"solid\",\r\n                                        \"borderWidth\": 1,\r\n                                        \"createdAt\": \"2024-07-21T15:04:32Z\",\r\n                                        \"creatorName\": \"{\\\"Document\\\":\\\"Ttire\\\"}\",\r\n                                        \"customData\": {\r\n                                            \"User\": \"FirstName\",\r\n                                            \"value\": \"\"\r\n                                        },\r\n                                        \"font\": \"Helvetica\",\r\n                                        \"fontSize\": 12,\r\n                                        \"formFieldName\": \"TEXT_WIDGET_01J3AX5BW5Q4S6YGEEERR87PJ3\",\r\n                                        \"horizontalAlign\": \"left\",\r\n                                        \"id\": \"01J3AX5BW5V77M2C7YBJRN1WGS\",\r\n                                        \"lineHeightFactor\": 1.186000108718872,\r\n                                        \"name\": \"01J3AX5BW6J3YBJBZF3ABV0ZE4\",\r\n                                        \"opacity\": 1,\r\n                                        \"pageIndex\": 0,\r\n                                        \"rotation\": 0,\r\n                                        \"type\": \"pspdfkit/widget\",\r\n                                        \"updatedAt\": \"2024-07-21T15:04:56Z\",\r\n                                        \"v\": 2,\r\n                                        \"verticalAlign\": \"center\"\r\n                                    }\r\n                                ],\r\n                                \"formFields\": [\r\n                                    {\r\n                                        \"annotationIds\": [\r\n                                            \"01J3AX5BW5V77M2C7YBJRN1WGS\"\r\n                                        ],\r\n                                        \"comb\": false,\r\n                                        \"defaultValue\": \"\",\r\n                                        \"doNotScroll\": false,\r\n                                        \"doNotSpellCheck\": false,\r\n                                        \"id\": \"01J3AX64W4SJSJA90NQRAMJCGC\",\r\n                                        \"label\": \"TEXT_WIDGET_01J3AX5BW5Q4S6YGEEERR87PJ3\",\r\n                                        \"multiLine\": false,\r\n                                        \"name\": \"TEXT_WIDGET_01J3AX5BW5Q4S6YGEEERR87PJ3\",\r\n                                        \"password\": false,\r\n                                        \"pdfObjectId\": 94,\r\n                                        \"richText\": false,\r\n                                        \"type\": \"pspdfkit/form-field/text\",\r\n                                        \"v\": 1\r\n                                    }\r\n                                ],\r\n                                \"format\": \"https://pspdfkit.com/instant-json/v1\",\r\n                                \"pdfId\": {\r\n                                    \"changing\": \"QV5CW7SEzOfM3vnnwDZlRA==\",\r\n                                    \"permanent\": \"SGS5RehxYUyGZIpdckC0Nw==\"\r\n                                }\r\n                            }\r\n                        }",
                            LastModifiedDate = new DateTime(2024, 7, 23, 14, 4, 54, 144, DateTimeKind.Local).AddTicks(3122),
                            PathFile = "https://blobstoragedbdemo.blob.core.windows.net/smsproject/00deed32-72c9-4322-b928-265ba7184a1d.pdf"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Request", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocumentStatus")
                        .HasColumnType("int");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("IdTrainee")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModeleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NameTrainee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonRejection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Requests");

                    b.HasData(
                        new
                        {
                            Id = new Guid("024f7799-a482-465c-a07c-6ac4df97b53e"),
                            CreatedDate = new DateTime(2024, 7, 23, 14, 4, 54, 144, DateTimeKind.Local).AddTicks(2435),
                            DocumentStatus = 1,
                            DocumentType = "Demande de stage",
                            IdTrainee = new Guid("7b34f089-35e7-44dc-916f-67d239b7f2ff"),
                            LastModifiedDate = new DateTime(2024, 7, 23, 14, 4, 54, 144, DateTimeKind.Local).AddTicks(2475),
                            ModeleId = new Guid("84138a39-4945-473f-ab26-f16ef65c98ce"),
                            ReasonRejection = "",
                            Role = "assistant"
                        },
                        new
                        {
                            Id = new Guid("0edd1c4c-bf8c-4587-a962-250e49f87fa8"),
                            CreatedDate = new DateTime(2024, 7, 23, 14, 4, 54, 144, DateTimeKind.Local).AddTicks(2520),
                            DocumentStatus = 2,
                            DocumentType = "Convention de stage",
                            IdTrainee = new Guid("86652354-8cd3-4ca6-a992-9ea6582e067f"),
                            LastModifiedDate = new DateTime(2024, 7, 23, 14, 4, 54, 144, DateTimeKind.Local).AddTicks(2521),
                            ModeleId = new Guid("31aa833a-6346-4850-8365-a0db98e9785b"),
                            ReasonRejection = "ya pas de justification",
                            Role = "director"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Trainee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Trainees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0538ec10-a678-407b-ac05-550c334d57af"),
                            CreatedDate = new DateTime(2024, 7, 23, 14, 4, 54, 144, DateTimeKind.Local).AddTicks(3465),
                            FirstName = "John",
                            LastModifiedDate = new DateTime(2024, 7, 23, 14, 4, 54, 144, DateTimeKind.Local).AddTicks(3471),
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("e298149e-d90a-426b-8539-9ad9b10bda72"),
                            CreatedDate = new DateTime(2024, 7, 23, 14, 4, 54, 144, DateTimeKind.Local).AddTicks(3479),
                            FirstName = "Jane",
                            LastModifiedDate = new DateTime(2024, 7, 23, 14, 4, 54, 144, DateTimeKind.Local).AddTicks(3480),
                            LastName = "Smith"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
